{
  "_from": "linkedom@^0.11.0",
  "_id": "linkedom@0.11.2",
  "_inBundle": false,
  "_integrity": "sha512-cqxU5owJnJlSiGKkJ1a1umGEqNWvTLABkZ672EFwMEeRF1HeZ7yC8NbTI846FesfwYI3Qou2IfnBh/Wk1mrKmQ==",
  "_location": "/linkedom",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "linkedom@^0.11.0",
    "name": "linkedom",
    "escapedName": "linkedom",
    "rawSpec": "^0.11.0",
    "saveSpec": null,
    "fetchSpec": "^0.11.0"
  },
  "_requiredBy": [
    "/@11ty/eleventy-plugin-syntaxhighlight"
  ],
  "_resolved": "https://registry.npmjs.org/linkedom/-/linkedom-0.11.2.tgz",
  "_shasum": "1b50031f78db745b9ce7cb29354c26fff39c97ab",
  "_spec": "linkedom@^0.11.0",
  "_where": "/Users/TannerDolby/eleventy-metagen-docs/node_modules/@11ty/eleventy-plugin-syntaxhighlight",
  "author": {
    "name": "Andrea Giammarchi"
  },
  "bugs": {
    "url": "https://github.com/WebReflection/linkedom/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@ungap/event-target": "^0.2.3",
    "css-select": "^4.1.3",
    "cssom": "^0.5.0",
    "html-escaper": "^3.0.3",
    "htmlparser2": "^6.1.0",
    "uhyphen": "^0.1.0"
  },
  "deprecated": false,
  "description": "A triple-linked lists based DOM implementation",
  "devDependencies": {
    "@rollup/plugin-commonjs": "^20.0.0",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^13.0.4",
    "ascjs": "^5.0.1",
    "c8": "^7.8.0",
    "coveralls": "^3.1.1",
    "eslint": "^7.32.0",
    "rollup": "^2.56.2",
    "typescript": "^4.3.5"
  },
  "exports": {
    ".": {
      "import": "./esm/index.js",
      "default": "./cjs/index.js"
    },
    "./cached": {
      "import": "./esm/cached.js",
      "default": "./cjs/cached.js"
    },
    "./package.json": "./package.json",
    "./worker": "./worker.js"
  },
  "homepage": "https://github.com/WebReflection/linkedom#readme",
  "keywords": [
    "DOM",
    "JSDOM",
    "alternative",
    "performance",
    "lightweight"
  ],
  "license": "ISC",
  "main": "./cjs/index.js",
  "module": "./esm/index.js",
  "name": "linkedom",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/WebReflection/linkedom.git"
  },
  "scripts": {
    "benchmark": "node test/benchmark/linkedom.js",
    "benchmark:dom": "node test/benchmark/linkedom.js --dom; node test/benchmark/linkedom-cached.js --dom; node test/benchmark/jsdom.js --dom; node test/benchmark/basichtml.js --dom",
    "benchmark:dom:ce": "node test/benchmark/linkedom.js --dom --custom-elements; node test/benchmark/linkedom-cached.js --dom --custom-elements; node test/benchmark/jsdom.js --dom --custom-elements; node test/benchmark/basichtml.js --dom --custom-elements",
    "benchmark:html": "node test/benchmark/jsdon.js --html; node test/benchmark/linkedom.js --html; node test/benchmark/linkedom-cached.js --html; #node test/benchmark/jsdom.js --html",
    "benchmark:html:ce": "node test/benchmark/linkedom.js --html --custom-elements; node test/benchmark/linkedom-cached.js --html --custom-elements; #node test/benchmark/jsdom.js --html --custom-elements",
    "benchmark:html:mo": "node test/benchmark/linkedom.js --html --mutation-observer --custom-elements; node test/benchmark/linkedom-cached.js --html --mutation-observer --custom-elements",
    "benchmark:html:nc": "node test/benchmark/linkedom.js --html --no-clone; node test/benchmark/linkedom-cached.js --html --no-clone; #node test/benchmark/jsdom.js --html --no-clone",
    "benchmark:w3c": "node test/benchmark/linkedom.js --w3c; node test/benchmark/linkedom-cached.js --w3c; node test/benchmark/jsdom.js --w3c; node test/benchmark/basichtml.js --w3c",
    "benchmark:w3c:ce": "node test/benchmark/linkedom.js --w3c --custom-elements; node test/benchmark/linkedom-cached.js --w3c --custom-elements; node test/benchmark/jsdom.js --w3c --custom-elements; node test/benchmark/basichtml.js --w3c --custom-elements",
    "build": "npm run tsc && npm run cjs && npm run test",
    "cjs": "ascjs --no-default esm cjs",
    "coveralls": "c8 report --reporter=text-lcov | coveralls",
    "hello": "if [[ \"$(node --version)\" =~ ^v1[^2] ]]; then node --input-type=module -e \"import {DOMParser} from './esm/index.js';console.log('\\x1b[7m\\x1b[1m',(new DOMParser).parseFromString('<html>LinkeDOM<canvas /></html>','text/html').querySelectorAll('html')[0].firstChild.toString(),'\\x1b[0m')\"; fi",
    "test": "eslint esm/ && npm run hello && node test/benchmark/linkedom.js --w3c --mutation-observer --custom-elements && c8 node test/index.js && c8 report -r html",
    "tsc": "tsc -p ."
  },
  "type": "module",
  "types": "./types/index.d.ts",
  "version": "0.11.2"
}
